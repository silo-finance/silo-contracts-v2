1 function CurrentInterestRate (
    2 uint t0 , // time of last transaction already written in the
    3 // blockchain (in seconds )
    4 uint t1 , // current time (in seconds )
    5 uint _k , // state of the slope k at time t0
    6 uint u, // utilization at time t0
7 ) returns (
8 uint rcur // current annual interest rate shown to the user
9 ) {
    10 uint T =  t1 - t0; // length of time period (in seconds )
    11  // REVERT !!!!
    12 uint k; // slope of the central segment of the kink
    // k
    13 if (u < u1) {
    14 k = max (_k - (c1 + cminus * (u1 - u) / DP) * T, kmin );
    // cminus * (u1 - u) !!!!
    ! // XXXX = c1 + cminus * (u1 - u) / DP -> c1 + cminus < MAX -> cminus < MAX / 2
    ! // XXXX * T < MAX -> T = 5 year (c1 + cminus) * 5 YEARS < max
    // -inf overflow: kmin - ...*T < MIN ^^^^^
    15 } else if (u > u2) {
    16 k = min (_k + min(c2 + cplus * (u - u2) / DP , dmax ) * T, kmax );
    // ^^^^
    17 } else {
    18 k = _k;
    19 }
    20
    21 uint r = 0; // additional interest rate
    22 if (u >= ulow ) {
    23 r = u - ulow ;
    24 if (u >= ucrit ) {
    25 r = r + alpha * (u - ucrit ) / DP;
    26 }
    27 r = r * k / DP;
    28 }
    29
    30 rcur = (r + rmin ) * 365 * 24 * 3600;
31 }