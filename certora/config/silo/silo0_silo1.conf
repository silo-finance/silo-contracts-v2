{
  "files": [
    "certora/harness/silo0/Silo0.sol",
    "silo-core/contracts/SiloConfig.sol",
    "certora/harness/silo0/ShareDebtToken0.sol",
    "certora/harness/silo0/ShareCollateralToken0.sol",
    "certora/harness/silo0/ShareProtectedCollateralToken0.sol",
    "certora/mocks/Token0.sol",
    "certora/harness/silo1/ShareCollateralToken1.sol",
    "certora/harness/silo1/ShareProtectedCollateralToken1.sol",
    "certora/harness/silo1/Silo1.sol",
    "certora/harness/silo1/ShareDebtToken1.sol",
    "certora/mocks/Token1.sol"
  ],

  "process": "emv",
  "rule_sanity": "basic",
  "server": "production",
  //"prover_version": "master",
  "commit_sha1": "3fa75053a2134810bd1c6903077a1b031f96f537",
  //"prover_version": 
  "solc": "solc8.21",
  "fe_version": "latest",
  "optimistic_loop": true,
  "smt_timeout": "4000",
  //"multi_assert_check": true,
  //"prover_resource_files": [ "ac:/Users/otakartrunda/Certora/Projects/silo-certoraFork/timeouts/mintRedeem_profitable/2/splitStatsdata.json" ],
  
  "prover_args": [ 
    "-enableCopyLoopRewrites true", 
    "-summaryResolutionMode tiered", 
    "-enableEqualityReasoning true",
    //"-newSplitParallel true",
    "-depth 20",
    "-smt_initialSplitDepth 3",
    "-mediumTimeout 5",
    ],
  //"auto_nondet_difficult_internal_funcs": true, 
  "link": [
    "Silo0:config=SiloConfig",
    "ShareDebtToken0:silo=Silo0",
    "ShareCollateralToken0:silo=Silo0",
    "ShareProtectedCollateralToken0:silo=Silo0",
    "Silo1:config=SiloConfig",
    "ShareDebtToken1:silo=Silo1",
    "ShareCollateralToken1:silo=Silo1",
    "ShareProtectedCollateralToken1:silo=Silo1",
    "SiloConfig:_SILO0=Silo0",
    "SiloConfig:_SILO1=Silo1",
    "SiloConfig:_TOKEN0=Token0",
    "SiloConfig:_TOKEN1=Token1",
  ],
  "packages":[
    "openzeppelin-contracts-upgradeable/=gitmodules/openzeppelin-contracts-upgradeable/contracts",
    "openzeppelin-contracts-upgradeable@v3.4.2/=gitmodules/openzeppelin-contracts-upgradeable@v3.4.2/contracts",
    "openzeppelin-contracts/=gitmodules/openzeppelin-contracts/contracts",
    "chainlink/=gitmodules/chainlink/contracts/src",
    "chainlink-ccip/=gitmodules/chainlink-ccip/contracts/src",
    "uniswap/=gitmodules/uniswap",
    "@uniswap/v3-core/=gitmodules/uniswap/v3-core",
  ],

  "parametric_contracts": ["Silo0"],
  //"verify": "Silo0:certora/specs/silo/highLevelProperties/HighLevelPropertiesSilo0 finishedRules.spec",
  //"verify": "Silo0:certora/specs/silo/highLevelProperties/HighLevelPropertiesSilo0.spec",
  //"verify": "Silo0:certora/specs/silo/variable-changes/VariableChangesSilo0.spec", 
  "verify": "Silo0:certora/specs/silo/highLevelProperties/CrossSilo.spec",
  //"verify": "Silo0:certora/specs/silo/highLevelProperties/Preview_Correctness.spec",
  //"verify": "Silo0:certora/specs/silo/highLevelProperties/Max_Correctness.spec",
  //"verify": "Silo0:certora/specs/silo/highLevelProperties/MethodsDontAffectOthers.spec",
  //"verify": "Silo0:certora/specs/silo/highLevelProperties/MethodInverse.spec",
  //"verify": "Silo0:certora/specs/silo/risk-assessment/RiskAssessmentSilo0_ByCertora.spec",
  

  "loop_iter": "2",
  //"rule": [ "whoCanChangeShareTokenTotalSupply", "whoCanChangeDebtShareTokenTotalSupply", ],
  "rule": [ "insolventCannotBorrow", ],
  //"msg": "HLP_integrityOfRedeem isd4,d25,mt3 LI2",
  "msg": "insolventCannotBorrow isd5,d20,mt3 LI2",
}